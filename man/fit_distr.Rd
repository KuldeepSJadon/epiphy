% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distr-fitting.R
\name{fit_distr}
\alias{fit_distr}
\alias{fit_distr.count}
\alias{fit_distr.incidence}
\title{Try to fit distributions to data sets}
\usage{
fit_distr(data, ...)

\method{fit_distr}{count}(data, ..., random = smle_pois,
  aggregated = smle_nbinom, extra_param, freq_model)

\method{fit_distr}{incidence}(data, ..., random = smle_binom,
  aggregated = smle_betabinom, extra_param, freq_model)
}
\arguments{
\item{x}{A data of the class \code{Intensity}.}

\item{type}{The kind of distribution to fit: "random", "aggregated" or "both".}
}
\value{
An object of class \code{DistFitting}, with the following components:

\tabular{ll}{
    \code{from} \tab Kind of the \code{Intensity} object. \cr
    \code{random} \tab Theoretical data under random assumption. \cr
    \code{aggregated} \tab Theoretical data under aggregated assumption. \cr
    \code{freqTable} \tab Entry 4 \cr
}
}
\description{
Depending of the nature of the data submitted, different distributions are
tryied to be fitted to the data.
}
\details{
Two distributions are used. One under the assumption of no aggregation and
the other one under the assumption of aggregation.
}
\examples{
\dontrun{
data <- Incidence(Cochran1936)
fit_distr(data)
}

# With count data:
model   <- glm(aphids$r ~ 1, family = poisson)
lambda1 <- exp(coef(model)[[1]])
# Or:
lambda1 <- unique(model$fitted.values)

my_data <- count(aphids)
my_fit_distr <- fit_distr(my_data)
lambda2 <- my_fit_distr$random$par[[1]]

identical(lambda1, lambda2)
lambda1 - lambda2

require(MASS)
fitdistr(aphids$r, "Poisson")

#--------
# Basic example
my_data <- incidence(tomato_t...$field_1929)
my_res  <- fit_distr(my_data)
my_res
summary(my_res)
plot(my_res)

# Advanced example with another proposed distribution for
# the aggregated situation:
# L-N-B : logistic-normal-binomial
# CLL-N-B: CLL-normal-binomial (Same as LNB, but with CLL link)
ll_lnb  <- function(data, param)
mle_lnb <- function(data) mle(data, ll_lnb, c(prob = 0.5, sigma = 0.1))
my_res2 <- fit_distr(my_data, aggregated = mle_lnb)
my_res2
summary(res2)
plot(res2)

}
\references{

}
